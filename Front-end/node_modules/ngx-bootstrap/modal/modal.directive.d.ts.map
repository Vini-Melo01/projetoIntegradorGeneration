{"version":3,"file":"modal.directive.d.ts","sources":["modal.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentRef, ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2, ViewContainerRef } from '@angular/core';\r\nimport { ModalBackdropComponent } from './modal-backdrop.component';\r\nimport { ModalOptions } from './modal-options.class';\r\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\r\n/** Mark any code with directive to show it's content in modal */\r\nexport declare class ModalDirective implements OnDestroy, OnInit {\r\n    private _element;\r\n    private _renderer;\r\n    /** allows to set modal configuration via element property */\r\n    set config(conf: ModalOptions);\r\n    get config(): ModalOptions;\r\n    /** This event fires immediately when the `show` instance method is called. */\r\n    onShow: EventEmitter<ModalDirective>;\r\n    /** This event is fired when the modal has been made visible to the user\r\n     * (will wait for CSS transitions to complete)\r\n     */\r\n    onShown: EventEmitter<ModalDirective>;\r\n    /** This event is fired immediately when\r\n     * the hide instance method has been called.\r\n     */\r\n    onHide: EventEmitter<ModalDirective>;\r\n    /** This event is fired when the modal has finished being\r\n     * hidden from the user (will wait for CSS transitions to complete).\r\n     */\r\n    onHidden: EventEmitter<ModalDirective>;\r\n    /** This field contains last dismiss reason.\r\n     * Possible values: `backdrop-click`, `esc` and `id: number`\r\n     * (if modal was closed by direct call of `.hide()`).\r\n     */\r\n    dismissReason: string;\r\n    get isShown(): boolean;\r\n    protected _config: ModalOptions;\r\n    protected _isShown: boolean;\r\n    protected isBodyOverflowing: boolean;\r\n    protected originalBodyPadding: number;\r\n    protected scrollbarWidth: number;\r\n    protected timerHideModal: number;\r\n    protected timerRmBackDrop: number;\r\n    protected backdrop: ComponentRef<ModalBackdropComponent>;\r\n    private _backdrop;\r\n    private isNested;\r\n    private clickStartedInContent;\r\n    constructor(_element: ElementRef, _viewContainerRef: ViewContainerRef, _renderer: Renderer2, clf: ComponentLoaderFactory, modalDefaultOption: ModalOptions);\r\n    onClickStarted(event: MouseEvent): void;\r\n    onClickStop(event: MouseEvent): void;\r\n    onEsc(event: KeyboardEvent): void;\r\n    ngOnDestroy(): void;\r\n    ngOnInit(): void;\r\n    /** Allows to manually toggle modal visibility */\r\n    toggle(): void;\r\n    /** Allows to manually open modal */\r\n    show(): void;\r\n    /** Allows to manually close modal */\r\n    hide(event?: Event): void;\r\n    /** Private methods @internal */\r\n    protected getConfig(config?: ModalOptions): ModalOptions;\r\n    /**\r\n     *  Show dialog\r\n     *  @internal\r\n     */\r\n    protected showElement(): void;\r\n    /** @internal */\r\n    protected hideModal(): void;\r\n    /** @internal */\r\n    protected showBackdrop(callback?: Function): void;\r\n    /** @internal */\r\n    protected removeBackdrop(): void;\r\n    /** Events tricks */\r\n    protected focusOtherModal(): void;\r\n    /** @internal */\r\n    protected resetAdjustments(): void;\r\n    /** Scroll bar tricks */\r\n    /** @internal */\r\n    protected checkScrollbar(): void;\r\n    protected setScrollbar(): void;\r\n    protected resetScrollbar(): void;\r\n    protected getScrollbarWidth(): number;\r\n}\r\n"]}